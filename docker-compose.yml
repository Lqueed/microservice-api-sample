version: '3.4'
services:

    api:
        build:
            context: ./api
            dockerfile: Dockerfile
        depends_on:
            queue:
                condition: service_healthy
        environment:
            - HOST=0.0.0.0
            - PORT=5000
        ports:
            - 5000:5000
        volumes:
            - ./api:/home/app
            - ./log:/home/app/log
            - ./upload:/upload
            - ./export:/export

    queue:
        restart: always
        image: rabbitmq:3-management-alpine
        healthcheck:
            test: rabbitmq-diagnostics -q ping
        environment:
            - RABBITMQ_DEFAULT_USER=admin
            - RABBITMQ_DEFAULT_PASS=admin1
        ports:
            - 5672:5672
            - 15672:15672

    storage:
        image: minio/minio:edge
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
            interval: 30s
            timeout: 20s
            retries: 3
        volumes:
            - ./data/minio:/data
        environment:
            - MINIO_ACCESS_KEY=AKIAIOSFODNN7EXAMPLE
            - MINIO_SECRET_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
        ports:
            - 9000:9000
        command: server /data

    python-cv:
        build:
            context: ./python-cv
            dockerfile: Dockerfile
        depends_on:
            queue:
                condition: service_healthy
        volumes:
            - ./python-cv:/home/app
            - ./upload:/upload
            - ./export:/export
            - ./log:/home/app/log
        environment:
            - HOST=0.0.0.0
            - PORT=5010
            
    redis:
        image: redis
        restart: always
        volumes:
            - ./storage/redis/data:/data
        ports:
            - 6380:6380

    redisinsight:
        container_name: redisinsight
        image: redislabs/redisinsight:latest
        ports: 
            - 8001:8001
